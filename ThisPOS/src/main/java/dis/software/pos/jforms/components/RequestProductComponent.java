/*
 * Copyright (C) 2017 Milton Cavazos
 *
 * Este programa es de código libre; usted podrá instalar y/o
 * utilizar una copia del programa de computación en una computadora compatible,
 * limitándose al número permitido de computadoras.
 */
package dis.software.pos.jforms.components;

import dis.software.pos.Application;
import dis.software.pos.combobox.model.UnitComboBoxModel;
import dis.software.pos.combobox.renderers.UnitComboBoxRenderer;
import dis.software.pos.entities.Product;
import dis.software.pos.entities.ProductUnit;
import dis.software.pos.entities.Unit;
import dis.software.pos.interfaces.IProductUnit;
import java.awt.event.ItemEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JTextField;

/**
 * Formulario para solicitud de producto
 * @author Milton Cavazos
 */
public class RequestProductComponent extends javax.swing.JFrame
{
    
    private static Unit unit;
    private static Integer quantity = -1;
    private static Boolean isConfigured;
    
    private List<Unit> list = new ArrayList<>();

    /**
     * Creación de nuevo formulario RequireProductJFrame
     */
    public RequestProductComponent()
    {
        
        initComponents();
        
    }
    
    public RequestProductComponent(Product product)
    {
        
        initComponents();
        
        jtxtQuantity.addKeyListener(new KeyAdapter()
        {
            @Override
            public void keyReleased(KeyEvent e)
            {
                if (!((JTextField) e.getSource()).getText().matches("^[0-9]+(\\.[0-9]{1,2})?$"))
                {
                    quantity = -1;
                }
                else
                {
                    quantity = Integer.valueOf(((JTextField) e.getSource()).getText());
                }
            }
        });
        
        jlblNote.setVisible(Boolean.FALSE);
        jlblNoteDescription.setVisible(Boolean.FALSE);
        
        jlblProductName.setText(product.getName().toUpperCase());
        
        IProductUnit iProductUnit = Application.getContext().getBean(IProductUnit.class);
        //Se buscan las unidades configuradas del producto
        list = iProductUnit.findByProduct(product).stream()
            .map(ProductUnit::getUnit).collect(Collectors.toList());
        //Se valida si el producto tiene unidades configuradas
        isConfigured = !list.isEmpty();
        //Se agrega la opción "Elige una unidad"
        list.add(0, new Unit("", "Elige una unidad", ""));
        
        jcboUnit.setModel(new UnitComboBoxModel(list));
        jcboUnit.setRenderer(new UnitComboBoxRenderer());
        jcboUnit.addItemListener((ItemEvent e) ->
        {
            if (e.getStateChange() == ItemEvent.SELECTED)
            {
                //Objeto afectado por el evento
                unit = (Unit) e.getItem();
                if (unit.getId() == null)
                {
                    unit = null;
                    jlblQuantityInPieces.setText("(0 piezas)");
                    return;
                }
                jlblQuantityInPieces.setText("("
                    + iProductUnit.getQuantityBy(product, unit).toString() + " piezas)");
            }
        });
        
    }

    /**
     * Método para obtener la unidad seleccionada por el usuario
     * @return Unidad seleccionada
     */
    public static Unit getUnit()
    {
        return unit;
    }
    
    /**
     * Método para obtener la cantidad solicitada ingresada por el usuario.
     * @return Cantidad solicitada
     */
    public static Integer getQuantity()
    {
        return quantity;
    }

    /**
     * Método para conocer si el producto seleccionado tiene unidades configuradas
     * @return Boolean.TRUE si esta configurado
     */
    public static Boolean getIsConfigured()
    {
        return isConfigured;
    }
    
    /**
     * Método para bloquear controles cuando el producto no tiene unidades configuradas
     */
    public void lock()
    {
        jcboUnit.setEnabled(Boolean.FALSE);
        jtxtQuantity.setEnabled(Boolean.FALSE);
        jlblNote.setVisible(Boolean.TRUE);
        jlblNoteDescription.setVisible(Boolean.TRUE);
        //Si el producto no tiene unidades configuradas
        if (!isConfigured) 
        {
            jlblNoteDescription.setText("Aún no se han configurado las unidades de este producto.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlblProduct = new javax.swing.JLabel();
        jlblProductName = new javax.swing.JLabel();
        jlblUnit = new javax.swing.JLabel();
        jcboUnit = new javax.swing.JComboBox<>();
        jlblQuantity = new javax.swing.JLabel();
        jtxtQuantity = new javax.swing.JTextField();
        jlblQuantityInPieces = new javax.swing.JLabel();
        jlblNote = new javax.swing.JLabel();
        jlblNoteDescription = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlblProduct.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jlblProduct.setText("Producto:");

        jlblProductName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jlblUnit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jlblUnit.setText("* Unidad");

        jcboUnit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jlblQuantity.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jlblQuantity.setText("* Cantidad:");

        jtxtQuantity.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jlblQuantityInPieces.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jlblQuantityInPieces.setText("(0 piezas)");

        jlblNote.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jlblNote.setText("Nota:");

        jlblNoteDescription.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jlblNoteDescription.setForeground(new java.awt.Color(204, 0, 0));
        jlblNoteDescription.setText("Este producto tiene una solicitud pendiente.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlblNote)
                    .addComponent(jlblQuantity)
                    .addComponent(jlblUnit)
                    .addComponent(jlblProduct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcboUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtxtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlblQuantityInPieces))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblProductName)
                            .addComponent(jlblNoteDescription))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblProduct)
                    .addComponent(jlblProductName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblUnit)
                    .addComponent(jcboUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblQuantity)
                    .addComponent(jtxtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblQuantityInPieces))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblNote)
                    .addComponent(jlblNoteDescription))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Unit> jcboUnit;
    private javax.swing.JLabel jlblNote;
    private javax.swing.JLabel jlblNoteDescription;
    private javax.swing.JLabel jlblProduct;
    private javax.swing.JLabel jlblProductName;
    private javax.swing.JLabel jlblQuantity;
    private javax.swing.JLabel jlblQuantityInPieces;
    private javax.swing.JLabel jlblUnit;
    private javax.swing.JTextField jtxtQuantity;
    // End of variables declaration//GEN-END:variables
}
